# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: circleci/openjdk:8-jdk

      # We use this specific version to avoid an upstream issue with the failsafe plugin,
      # should be reverted back to '8-jdk' when that is fixed.
      - image: circleci/openjdk:8u171-jdk-stretch


    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      # run tests!
      - run: mvn verify
      - run:
          command: |
            sudo mkdir -p test-reports/junit/
            find . -type f -regex ".*\/target\/surefire-reports\/.*\.xml" -exec sudo cp {} test-reports/junit/ \;
            find . -type f -regex ".*\/target\/failsafe-reports\/.*\.xml" -exec sudo cp {} test-reports/junit/ \;

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - store_artifacts:
          path: test-reports/junit/
          destination: test-results

      - store_test_results:
          path: test-reports/junit/

      - persist_to_workspace:
          root: .
          paths:
            - .

  publish:
    docker:
      - image: circleci/python:3.7.2
    working_directory: ~/lib
    steps:
      - attach_workspace:
          at: .
      - run: sudo pip install awscli
      - run:
          name: upload package
          command: |
            aws --region eu-west-1 s3 cp target/ $S3_OUTPUT_PATH/ --recursive  --exclude "*" --include "pepper-box-*.jar"

workflows:
  version: 2
  build_release:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: jmeter5.0_kafka1.1.1
